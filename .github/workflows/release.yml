name: Perform release

on:
  push:
    branches:
      - main

jobs:
  create-tag-and-release:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.create_tag.outputs.new_tag }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4

      - name: Get latest tag
        id: get_latest_tag
        run: echo "latest_tag=$(git describe --tags --match="v[0-9]\.[0-9]\.[0-9]" --abbrev=0 || echo v0.0.0)" >> $GITHUB_OUTPUT

      - name: Create new tag
        id: create_tag
        run: |
          increment_version() {
            local version=$1
            echo $version | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g'
          }

          git fetch --tags
          latest_tag=$(git describe --tags --match="v[0-9]\.[0-9]\.[0-9]" --abbrev=0 || echo v0.0.0)
          new_tag=$(increment_version $latest_tag)

          while git rev-parse $new_tag >/dev/null 2>&1; do
            new_tag=$(increment_version $new_tag)
          done

          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag $new_tag
          git push origin $new_tag --force

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.create_tag.outputs.new_tag }}

  perform-release-linux:
    needs: create-tag-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew nativeCompile

      - name: Create Release Archive
        run: |
          mkdir -p release
          cp app/build/native/nativeCompile/PCBooster release/PCBooster
          tar -czvf PCBooster-linux.tar.gz -C release PCBooster

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: PCBooster-linux.tar.gz
          tag_name: ${{ needs.create-tag-and-release.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  perform-release-macos:
    needs: create-tag-and-release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew nativeCompile

      - name: Create Release Archive
        run: |
          mkdir -p release
          cp app/build/native/nativeCompile/PCBooster release/PCBooster
          tar -czvf PCBooster-macos.tar.gz -C release PCBooster

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: PCBooster-macos.tar.gz
          tag_name: ${{ needs.create-tag-and-release.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  perform-release-windows:
    needs: create-tag-and-release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle
        run: ./gradlew nativeCompile

      - name: Create Release Archive
        run: |
          mkdir release
          copy app\build\native\nativeCompile\PCBooster.exe release\PCBooster.exe
          Compress-Archive -Path release\PCBooster.exe -DestinationPath PCBooster-windows.zip

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: PCBooster-windows.zip
          tag_name: ${{ needs.create-tag-and-release.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
